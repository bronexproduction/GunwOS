{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build and write floppy (rawwritewin)",
            "type": "shell",
            "command": "tools/rawwritewin-0.7/rawwritewin.exe build/gunwos.img",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "Build and image"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build and run (QEMU)",
            "type": "shell",
            "command": "bash scripts/qemu_run.sh build/gunwos.img",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "Build and image"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build and debug (QEMU)",
            "type": "shell",
            "command": "bash scripts/qemu_run.sh build/gunwos.img debug",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "dependsOn": [
                "Build and image"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build and run (VirtualBox)",
            "type": "shell",
            "command": "bash scripts/virtualbox_run.sh",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": [
                "Build and image"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build and image",
            "type": "shell",
            "command": "make img",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "dependsOn": [
                "Build"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build",
            "type": "shell",
            "command": "make clean all",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": []
        },
        {
            "label": "Run tests",
            "type": "shell",
            "command": "make test",
            "group": {
                "kind": "test",
                "isDefault": false
            },
            "problemMatcher": []
        },
        {
            "label": "Install tools",
            "type": "shell",
            "linux": {
                "command": "sudo apt-get update && sudo apt-get install -y nasm qemu-system-x86 lldb gdb && bash scripts/download_tools.sh",
            },
            "osx": {
                "command": "brew install nasm qemu coreutils && bash scripts/download_tools.sh",
            },
            "group": {
                "kind": "none",
                "isDefault": false
            }
        },
        {
            "label": "Build tools (GCC, LD)",
            "type": "shell",
            "command": "time bash scripts/build_gcc_clean.sh ${input:targetSystemArch}-${input:gccExecutableFormat} ${input:gccVersion} ${input:binutilsVersion} ${input:newlibVersion}",
            "group": {
                "kind": "none",
                "isDefault": false
            }
        },
        {
            "label": "Build tools (Rust)",
            "type": "shell",
            "command": "time bash scripts/build_rust_clean.sh ${PWD}/spec/${input:targetSystemArch}-none-none.json ${input:rustVersion}",
            "group": {
                "kind": "none",
                "isDefault": false
            }
        }
    ],
    "inputs": [
        {
            "id": "gccVersion",
            "description": "GCC version:",
            "type": "promptString"
        },
        {
            "id": "binutilsVersion",
            "description": "Binutils version:",
            "type": "promptString"
        },
        {
            "id": "newlibVersion",
            "description": "Newlib version:",
            "type": "promptString"
        },
        {
            "id": "targetSystemArch",
            "description": "Target system architecture:",
            "default": "i386",
            "type": "promptString"
        },
        {
            "id": "gccExecutableFormat",
            "description": "GCC executable format:",
            "default": "elf",
            "type": "promptString"
        },
        {
            "id": "rustVersion",
            "description": "Rust version:",
            "default": "latest",
            "type": "promptString"
        },
    ]
}